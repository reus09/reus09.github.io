<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>RMI on Reus09&#39;s Blog</title>
    <link>https://reus09.github.io/tags/rmi/</link>
    <description>Recent content in RMI on Reus09&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 10 Mar 2023 19:17:17 +0800</lastBuildDate><atom:link href="https://reus09.github.io/tags/rmi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JAVA安全 RMI</title>
      <link>https://reus09.github.io/posts/tech/java%E5%AE%89%E5%85%A8-rmi/</link>
      <pubDate>Fri, 10 Mar 2023 19:17:17 +0800</pubDate>
      
      <guid>https://reus09.github.io/posts/tech/java%E5%AE%89%E5%85%A8-rmi/</guid>
      <description>实际上，懒狗(x本人)好久没学习了，但是倍感就业压力如此之大，此篇简单分析一下RMI的流程。 RMI介绍 RMI (Remote Method Invocation) 远程方法调用，他的出现是为了解决一个问题，如何在本地透明的调用远程服务器上的方法。 这种思想在 C 语言中的 RPC（Remote Procedure Calls）中早就有了体现，但是 RPC 是打包和传送</description>
    </item>
    
  </channel>
</rss>
