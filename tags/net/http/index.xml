<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>net/http on Reus09&#39;s Blog</title>
    <link>https://reus09.github.io/tags/net/http/</link>
    <description>Recent content in net/http on Reus09&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language><atom:link href="https://reus09.github.io/tags/net/http/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go原生net包分析</title>
      <link>https://reus09.github.io/posts/tech/go%E5%8E%9F%E7%94%9Fnet%E5%8C%85%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 11 Sep 2022 14:40:53 +0800</pubDate>
      
      <guid>https://reus09.github.io/posts/tech/go%E5%8E%9F%E7%94%9Fnet%E5%8C%85%E5%88%86%E6%9E%90/</guid>
      <description>很长时间没有水博客了，前些天学习了一下go的语法。go凭借其轻量级和并发性的原因，性能越来越优异，这里简单分析一下如何通过go原生的http开启一个web服务，并对其过程进行一定的剖析。 go原生的web服务搭建 Go 语言里面提供了一个完善的 net/http 包，通过 http 包可以很方便的就搭建起来一个可以</description>
    </item>
    
  </channel>
</rss>
