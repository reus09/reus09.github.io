<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Java开发 on Reus09&#39;s Blog</title>
    <link>https://reus09.github.io/categories/java%E5%BC%80%E5%8F%91/</link>
    <description>Recent content in Java开发 on Reus09&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 03 May 2022 12:43:35 +0000</lastBuildDate><atom:link href="https://reus09.github.io/categories/java%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpringBoot</title>
      <link>https://reus09.github.io/posts/tech/springboot/</link>
      <pubDate>Tue, 03 May 2022 12:43:35 +0000</pubDate>
      
      <guid>https://reus09.github.io/posts/tech/springboot/</guid>
      <description>因为之前接触了一点ssm，所以这里简单的学习了springboot的一些简单用法，具体的源码分析以后有时间的话慢慢分析 这里简单谈一下springboot的简单了解，springboot实际上是把ssm、web服务器比如tomcat,jetty、mysql或者nosql各个框架整合</description>
    </item>
    
    <item>
      <title>Mybatis</title>
      <link>https://reus09.github.io/posts/tech/mybatis/</link>
      <pubDate>Fri, 29 Apr 2022 09:17:06 +0000</pubDate>
      
      <guid>https://reus09.github.io/posts/tech/mybatis/</guid>
      <description>MyBatis 这里整理了MyBatis的常见用法 Mybatis 主要对数据库的操作提供了组件 1 环境搭建 导入依赖 1 2 3 4 5 6 7 8 9 10 11 12 &amp;lt;!-- Mybatis核心 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.mybatis&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mybatis&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.5.7&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- MySQL驱动 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;8.0.27&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 创建MyBatis的核心配置文件 mybatis-config.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39</description>
    </item>
    
    <item>
      <title>Spring Mvc</title>
      <link>https://reus09.github.io/posts/tech/spring-mvc/</link>
      <pubDate>Fri, 29 Apr 2022 09:16:59 +0000</pubDate>
      
      <guid>https://reus09.github.io/posts/tech/spring-mvc/</guid>
      <description>Spring-mvc 本篇主要对spring-mvc的知识点进行总结 MVC的工作流程： 用户通过视图层发送请求到服务器，在服务器中请求被Controller接收，Controller调用相应的Model层处理请求，处理完毕将结果返回到Controller，Controller再根据请求处理的结果找到相</description>
    </item>
    
    <item>
      <title>Spring</title>
      <link>https://reus09.github.io/posts/tech/spring/</link>
      <pubDate>Mon, 18 Apr 2022 20:36:10 +0000</pubDate>
      
      <guid>https://reus09.github.io/posts/tech/spring/</guid>
      <description>这里主要学习了Spring5的相关知识，对ioc和Aop的相关知识进行整理 0x01 IOC 概念 控制反转，把创建对象过程交给 Spring 进行管理 使用目的： 为了耦合度降低 底层原理 xml 解析、工厂模式、反射 IOC 思想基于 IOC 容器完成，IOC 容器底层就是对象工厂 1.1 实现方式 BeanFactory：IOC 容器基本实现，是 Spring</description>
    </item>
    
    <item>
      <title>Javaweb</title>
      <link>https://reus09.github.io/posts/tech/javaweb/</link>
      <pubDate>Thu, 14 Apr 2022 20:12:46 +0000</pubDate>
      
      <guid>https://reus09.github.io/posts/tech/javaweb/</guid>
      <description>0x01 Tomcat使用 1.1 Tomcat设置编码 Tomcat设置编码 tomcat8之前，设置编码： get请求方式： get方式目前不需要设置编码（基于tomcat8） 如果是get请求发送的中文数据，转码稍微有点麻烦（tomcat8之前） 1 2 3 4 5 String fname = request.getParameter(&amp;#34;fname&amp;#34;); //1.将字符串打散成字节数组 byte[] bytes =</description>
    </item>
    
    <item>
      <title>Jdbc</title>
      <link>https://reus09.github.io/posts/tech/jdbc/</link>
      <pubDate>Thu, 24 Mar 2022 23:02:23 +0000</pubDate>
      
      <guid>https://reus09.github.io/posts/tech/jdbc/</guid>
      <description>JDBC概述 JDBC程序编写步骤 总结一下JDBC建立连接的全过程。 二：获取数据库连接 Driver接口实现类 Driver接口介绍 java.sql.Driver 接口是所有 JDBC 驱动程序需要实现的接口。这个接口是提供给数据库厂商使用的，不同数据库厂商提供不同的实现。 在程序中不需要直接去访问实现了 Driver 接口的类，而是由驱动</description>
    </item>
    
  </channel>
</rss>
