<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Java开发 on Reus09&#39;s Blog</title>
    <link>https://reus09.github.io/categories/java%E5%BC%80%E5%8F%91/</link>
    <description>Recent content in Java开发 on Reus09&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 03 May 2022 12:43:35 +0000</lastBuildDate><atom:link href="https://reus09.github.io/categories/java%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpringBoot</title>
      <link>https://reus09.github.io/posts/tech/springboot/</link>
      <pubDate>Tue, 03 May 2022 12:43:35 +0000</pubDate>
      
      <guid>https://reus09.github.io/posts/tech/springboot/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;因为之前接触了一点&lt;code&gt;ssm&lt;/code&gt;，所以这里简单的学习了&lt;code&gt;springboot&lt;/code&gt;的一些简单用法，具体的源码分析以后有时间的话慢慢分析&lt;/li&gt;
&lt;li&gt;这里简单谈一下&lt;code&gt;springboot&lt;/code&gt;的简单了解，&lt;code&gt;springboot&lt;/code&gt;实际上是把&lt;code&gt;ssm&lt;/code&gt;、&lt;code&gt;web服务器比如tomcat,jetty&lt;/code&gt;、&lt;code&gt;mysql&lt;/code&gt;或者&lt;code&gt;nosql&lt;/code&gt;各个框架整合到一起的产物，使用&lt;code&gt;springboot&lt;/code&gt;实际上简化了各个框架的组合使用。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;springboot&lt;/code&gt;中加载支持的配置的依赖一般以&lt;code&gt;springboot-starter-xxx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;非官方支持的第三方依赖命名：&lt;code&gt;xxx-springboot-starter-xxx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SpringBoot默认会在底层配好所有的组件。但是如果用户自己配置了以用户的优先&lt;/li&gt;
&lt;li&gt;学习可以通过&lt;code&gt;springboot&lt;/code&gt;提供的官方文档
&lt;ul&gt;
&lt;li&gt;这里给出&lt;code&gt;2.5.13&lt;/code&gt;版本的官方文档链接
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.spring.io/spring-boot/docs/2.5.13/reference/html/&#34;&gt;https://docs.spring.io/spring-boot/docs/2.5.13/reference/html/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-配置使用&#34;&gt;1 配置使用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;application.properties&lt;/code&gt;和&lt;code&gt;application.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-注解使用&#34;&gt;2 注解使用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;因为&lt;code&gt;springboot&lt;/code&gt;集成了&lt;code&gt;springmvc&lt;/code&gt;和&lt;code&gt;spring&lt;/code&gt;，也组合了其许多的注解&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;springbootapplication&#34;&gt;&lt;code&gt;@SpringBootApplication&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@SpringBootApplication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;等同于
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@SpringBootConfiguration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@EnableAutoConfiguration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@ComponentScan&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;com.reus.boot&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;springbootconfiguration&#34;&gt;&lt;code&gt;@SpringBootConfiguration&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@Configuration&lt;/code&gt;。代表当前是一个配置类&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;enableautoconfiguration&#34;&gt;&lt;code&gt;@EnableAutoConfiguration&lt;/code&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@AutoConfigurationPackage&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Import&lt;/span&gt;(AutoConfigurationImportSelector.&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@interface&lt;/span&gt; EnableAutoConfiguration {}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;@EnableAutoConfiguration&lt;/code&gt;集成了两个注解&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mybatis</title>
      <link>https://reus09.github.io/posts/tech/mybatis/</link>
      <pubDate>Fri, 29 Apr 2022 09:17:06 +0000</pubDate>
      
      <guid>https://reus09.github.io/posts/tech/mybatis/</guid>
      <description>&lt;h1 id=&#34;mybatis&#34;&gt;MyBatis&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;这里整理了&lt;code&gt;MyBatis&lt;/code&gt;的常见用法&lt;/li&gt;
&lt;li&gt;Mybatis 主要对数据库的操作提供了组件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-环境搭建&#34;&gt;1 环境搭建&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;导入依赖&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Mybatis核心 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.mybatis&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;mybatis&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.5.7&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- MySQL驱动 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;mysql-connector-java&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;8.0.27&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建MyBatis的核心配置文件&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spring Mvc</title>
      <link>https://reus09.github.io/posts/tech/spring-mvc/</link>
      <pubDate>Fri, 29 Apr 2022 09:16:59 +0000</pubDate>
      
      <guid>https://reus09.github.io/posts/tech/spring-mvc/</guid>
      <description>&lt;h1 id=&#34;spring-mvc&#34;&gt;Spring-mvc&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;本篇主要对&lt;code&gt;spring-mvc&lt;/code&gt;的知识点进行总结&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MVC的工作流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户通过视图层发送请求到服务器，在服务器中请求被&lt;code&gt;Controller&lt;/code&gt;接收，&lt;code&gt;Controller&lt;/code&gt;调用相应的&lt;code&gt;Model&lt;/code&gt;层处理请求，处理完毕将结果返回到&lt;code&gt;Controller&lt;/code&gt;，&lt;code&gt;Controller&lt;/code&gt;再根据请求处理的结果找到相应的&lt;code&gt;View&lt;/code&gt;视图，渲染数据后最终响应给浏览器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;SpringMVC&lt;/code&gt;工作流程&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spring</title>
      <link>https://reus09.github.io/posts/tech/spring/</link>
      <pubDate>Mon, 18 Apr 2022 20:36:10 +0000</pubDate>
      
      <guid>https://reus09.github.io/posts/tech/spring/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;这里主要学习了&lt;code&gt;Spring5&lt;/code&gt;的相关知识，对&lt;code&gt;ioc&lt;/code&gt;和&lt;code&gt;Aop&lt;/code&gt;的相关知识进行整理&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;0x01-ioc&#34;&gt;0x01 IOC&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;概念
&lt;ul&gt;
&lt;li&gt;控制反转，把创建对象过程交给 Spring 进行管理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用目的：
&lt;ul&gt;
&lt;li&gt;为了耦合度降低&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;底层原理
&lt;ul&gt;
&lt;li&gt;xml 解析、工厂模式、反射&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IOC 思想基于 IOC 容器完成，IOC 容器底层就是对象工厂&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;11-实现方式&#34;&gt;1.1 实现方式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BeanFactory&lt;/code&gt;：&lt;code&gt;IOC &lt;/code&gt;容器基本实现，是 &lt;code&gt;Spring&lt;/code&gt; 内部的使用接口，不提供开发人员进行使用
&lt;ul&gt;
&lt;li&gt;加载配置文件时候不会创建对象，在获取对象（使用）才去创建对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ApplicationContext&lt;/code&gt;：&lt;code&gt;BeanFactory&lt;/code&gt; 接口的子接口，提供更多更强大的功能，一般由开发人 员进行使用
&lt;ul&gt;
&lt;li&gt;加载配置文件时候就会把在配置文件对象进行创建&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Bean&lt;/code&gt;管理
&lt;ul&gt;
&lt;li&gt;Spring创建对象&lt;/li&gt;
&lt;li&gt;Spring注入属性&lt;/li&gt;
&lt;li&gt;实现方法
&lt;ul&gt;
&lt;li&gt;基于&lt;code&gt;xml&lt;/code&gt;配置文件方式实现&lt;/li&gt;
&lt;li&gt;基于注解方式实现&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;12-xml配置文件&#34;&gt;1.2 &lt;code&gt;xml&lt;/code&gt;配置文件&lt;/h3&gt;
&lt;h4 id=&#34;121-创建对象&#34;&gt;1.2.1 创建对象&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;在 spring 配置文件中，使用 bean 标签，标签里面添加对应属性，就可以实现对象创建&lt;/li&gt;
&lt;li&gt;在 bean 标签有很多属性，介绍常用的属性 *
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id &lt;/code&gt;属性:唯一标识&lt;/li&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt; 属性:类全路径（包类路径)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;创建对象时候，默认也是执行无参数构造方法完成对象创建&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;com.atguigu.spring5.User&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;122-注入属性&#34;&gt;1.2.2 注入属性&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;DI：依赖注入，就是注入属性&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;1221-set方法注入&#34;&gt;1.2.2.1 set方法注入&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;这个注入方法类中必须要有&lt;code&gt;set&lt;/code&gt;方法，使用&lt;code&gt;property&lt;/code&gt;属性&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Javaweb</title>
      <link>https://reus09.github.io/posts/tech/javaweb/</link>
      <pubDate>Thu, 14 Apr 2022 20:12:46 +0000</pubDate>
      
      <guid>https://reus09.github.io/posts/tech/javaweb/</guid>
      <description>&lt;h2 id=&#34;0x01-tomcat使用&#34;&gt;0x01 Tomcat使用&lt;/h2&gt;
&lt;h3 id=&#34;11--tomcat设置编码&#34;&gt;1.1  &lt;code&gt;Tomcat&lt;/code&gt;设置编码&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Tomcat&lt;/code&gt;设置编码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;tomcat8之前，设置编码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;get请求方式：
get方式目前不需要设置编码（基于tomcat8）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果是get请求发送的中文数据，转码稍微有点麻烦（tomcat8之前）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String fname &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; request.&lt;span style=&#34;color:#a6e22e&#34;&gt;getParameter&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fname&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//1.将字符串打散成字节数组&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; bytes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fname.&lt;span style=&#34;color:#a6e22e&#34;&gt;getBytes&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ISO-8859-1&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//2.将字节数组按照设定的编码重新组装成字符串&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fname &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; String(bytes,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;post请求方式：
&lt;code&gt;request.setCharacterEncoding(&amp;quot;UTF-8&amp;quot;);&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jdbc</title>
      <link>https://reus09.github.io/posts/tech/jdbc/</link>
      <pubDate>Thu, 24 Mar 2022 23:02:23 +0000</pubDate>
      
      <guid>https://reus09.github.io/posts/tech/jdbc/</guid>
      <description>&lt;h2 id=&#34;jdbc概述&#34;&gt;JDBC概述&lt;/h2&gt;
&lt;h3 id=&#34;jdbc程序编写步骤&#34;&gt;JDBC程序编写步骤&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;总结一下&lt;code&gt;JDBC&lt;/code&gt;建立连接的全过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://cnblog-img-reus09.oss-cn-beijing.aliyuncs.com/image/1565969323908.png&#34; alt=&#34;1565969323908&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;二获取数据库连接&#34;&gt;二：获取数据库连接&lt;/h2&gt;
&lt;h3 id=&#34;driver接口实现类&#34;&gt;Driver接口实现类&lt;/h3&gt;
&lt;h4 id=&#34;driver接口介绍&#34;&gt;Driver接口介绍&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;java.sql.Driver 接口是所有 JDBC 驱动程序需要实现的接口。这个接口是提供给数据库厂商使用的，不同数据库厂商提供不同的实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在程序中不需要直接去访问实现了 Driver 接口的类，而是由驱动程序管理器类(java.sql.DriverManager)去调用这些Driver实现。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
